console.log('Starting bomber-game server');

const debug = require('debug')('bomber-game-server:server');
const http = require('http');

const server = http.createServer((function(request, response) {
  response.writeHead(200, {'Content-Type': 'text/plain'});
  response.end('This is just a Socket API, no website here!');
}));

const Game = require('../app/Game.js');
const Router = require('../app/Router.js');
const Scheduler = require('../app/Scheduler.js');

const game = new Game();
const router = new Router(game, server);
const scheduler = new Scheduler(game, router);

server.listen(3001);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
